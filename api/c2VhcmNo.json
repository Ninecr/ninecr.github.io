[{"title":"Vivado 更新板存储库之坑","date":"2021-07-01T12:29:34.000Z","date_formatted":{"ll":"Jul 1, 2021","L":"07/01/2021","MM-DD":"07-01"},"updated":"2021-07-01T13:17:30.942Z","content":"之前重置 Blog 的时候遇到了 hexo d 失败的坑，得到报错信息：\n12remote: Permission to Ninecr/ninecr.github.io.git denied to xilinx-xhub-users-g1.fatal: unable to access &#x27;https://github.com/Ninecr/ninecr.github.io/&#x27;: The requested URL returned error: 403\n可以看到 xilinx-xhub-users-g1 没有访问我的仓库的权限，手头的 xilinx 软件就一个 Vivado，在 xilinx 官网找到 Vivado blocks GitHub, error 403, xilinx-xhub-users-g1。\n问题出现的原因是 Vivado 中更新板存储库的一个迷惑行为，当使用 Vivado 中的 Update Board Repositories 功能后，在Windows凭据管理器中存储了用户名为 xilinx-xhub-users-g1 的凭据，导致我们无法向 GitHub 进行 push 操作：\n\n\n直接将该凭据删除，然后重新 push，验证 GitHub 帐户就可。\n附：解决 github push failed (remote: Permission to userA/repo.git denied to userB.)\n","plink":"https://ninecr.tk/vivado-update-board-repo.html/"},{"title":"VScode 配置 Java 开发环境","date":"2021-06-28T03:02:58.000Z","date_formatted":{"ll":"Jun 28, 2021","L":"06/28/2021","MM-DD":"06-28"},"updated":"2021-07-01T09:27:32.413Z","content":"下学期的专选课可能要学习 Java（你要是没选到怎么办？好了已经选到了），专选课估计没什么高要求，就先不上 IDEA 了，直接配到 VSCode 里，记录在这里也可供同学参考。目前只有单文件部分，似乎是可以编写项目的，熟悉下 Java 后再更新进去。\n环境准备\n这一部分不是本文重点，不详细叙述。\nJDK 安装\n可以直接官网下载，不管是 Oracle 的还是 OpenJDK 都行，添加环境变量\n\nJAVA_HOME： JDK 文件夹路径，如 D:\\ProgramFiles\\jdk-15.0.2\nPath：添加 %JAVA_HOME%\\bin\nCLASSPATH（可不配置）：.;%JAVA_HOME%\\lib\\dt.jar;%JAVA_HOME%\\lib\\tools.jar;\n\n打开 cmd 输入 Java -version 得到版本信息输出则安装完成。\nVSCode 安装\nVSCode 有多种版本可供选择，这里使用的是 64 位系统安装程序的稳定版本，在官网的底部选择下载。开箱如果不是中文到扩展页搜索安装 Chinese 重启即可。\n环境配置\n我的 VSCode 采用单文件夹工作区，所以在合适的目录下面新建一个 Java 文件夹并用 VSCode 打开，作为 Java 的工作区，下面介绍两种运行 Java 程序的配置方法。\nCode Runner\nCode Runner 是一个可以运行多种语言的非常不错的扩展，安装之后在工作区新建 .vscode 工作区配置文件夹，在其中创建工作区配置文件 settings.json：\nsettings.json123456789101112&#123;    &quot;code-runner.runInTerminal&quot;: true, // 将程序在 Terminal 运行而不是在输出中，便于交互输入    &quot;code-runner.executorMap&quot;: &#123;        &quot;java&quot;: &quot;javac -encoding utf8 $fileName -d C:/vscode/Java/out/ &amp;&amp; cd C:/vscode/Java/out/ &amp;&amp; java $fileNameWithoutExt&quot; // 对中文按 UTF-8 进行编码、将编译的 class 文件统一放到工作区下的 out 目录里        // 如果第一项配置为 flase，即将程序运行到输出，使用下面的配置避免中文乱码        // &quot;java&quot;: &quot;javac -encoding utf8 $fileName -d C:/vscode/Java/out/ &amp;&amp; cd C:/vscode/Java/out/ &amp;&amp; java -Dfile.encoding=UTF-8 $fileNameWithoutExt&quot;    &#125;,    &quot;code-runner.preserveFocus&quot;: false, // 若为 false，run code 后光标会聚焦到终端上。如果需要频繁输入数据可设为 false    &quot;code-runner.saveFileBeforeRun&quot;: true, // run code 前保存    &quot;code-runner.fileDirectoryAsCwd&quot;: true, // 将 code runner 终端的工作目录切换到文件目录再运行，对依赖 cwd 的程序产生影响；如果为 false，executorMap 要加 cd $dir    &quot;java.debug.settings.enableRunDebugCodeLens&quot;: false // 不显示 Debugger for Java 插件的 run 和 debug 按钮&#125;\n在工作区新建一个 Hello.java：\n12345public class Hello &#123;    public static void main(String[] args) &#123;        System.out.println(&quot;Hello, World.\\n你好世界！&quot;);    &#125;&#125;\n点击右上角的运行或者使用快捷键 Ctrl + Alt + N 运行这段代码。\nJava 扩展包\n\n在扩展页面搜索 java，安装 Java Extension Pack 扩展，这时一定程度上已经可以愉快地食用了，点击 Hello.java 文件中类名下方的 Run，在终端得到输出，如果你的中文出现了乱码，检查 VSCode 右下角的编码是不是 UTF-8，Windows 终端输出的编码是 UTF-8。\n\n如果你的 java 文件没有主类，只有一个类时也会在类名下得到 Run 和 Debug 的按钮并且可以运行。\n\n在 Java Extension Pack 中 Debugger for Java 扩展的支持下，你可以不需要配置工作区的 launch.json 文件，只要在行号前单击打好断点并点击 Debug，就可以愉快地开始调试。但很快就愉快不起来了(bushi，步进时单步进入了 println，大概没人会想这么调试，那就只能配置 launch.json \n新建 .vscode\\launch.json 调试配置文件：\nlaunch.json123456789101112131415161718192021&#123;    &quot;version&quot;: &quot;0.2.0&quot;,    &quot;configurations&quot;: [        &#123;            &quot;type&quot;: &quot;java&quot;,            &quot;name&quot;: &quot;Launch Current File&quot;,            &quot;request&quot;: &quot;launch&quot;,            &quot;mainClass&quot;: &quot;$&#123;file&#125;&quot;,            &quot;stepFilters&quot;: &#123;                &quot;skipClasses&quot;: [ // 单步时跳过的类，根据需要添加                    &quot;$JDK&quot;,                    &quot;junit.*&quot;,                    &quot;printstream&quot;                ],                &quot;skipSynthetics&quot;: false,                &quot;skipStaticInitializers&quot;: false,                &quot;skipConstructors&quot;: false            &#125;        &#125;    ]&#125;\n此时使用 F5 进行调试，不会步入 println，但是点击 Debug 调试仍然会，原因是点击 Run 或 Debug 时，Debugger for Java 扩展会在 launch.json 中添加一个以运行的类名为主类名的默认配置，没有过滤类。所以如果不想 launch.json 越用越长，建议只使用 F5 以默认配置运行和调试，当然如果你对上面的问题需求不大，你也可以根本不创建 launch.json。\n我使用 F5 进行调试，那我现在不想在主类名下面看到 Run 和 Debug 的按键，可以在工作区的 settings.json 里加一句 &quot;java.debug.settings.enableRunDebugCodeLens&quot;: false，世界干净了。\nEnd\n尽管删了不少，还是感觉废话很多，这大概也是不想更 blog 的重要原因之一，过于流水账了，有待改进……\n","plink":"https://ninecr.tk/Java-in-VScode.html/"},{"title":"在 Vivaldi 中使用 Bing 壁纸的 Chrome 新标签页","date":"2021-06-12T11:00:40.000Z","date_formatted":{"ll":"Jun 12, 2021","L":"06/12/2021","MM-DD":"06-12"},"updated":"2021-06-28T02:59:29.283Z","content":"背景\n几天前 Vivaldi 更新了 4.0 大版本，之前一段时间影响体验的问题基本已经修复，就重新从 Edge 迁移回来。由于对 Vivaldi 的 Strartpage 不太满意，之前使用时一直将 Google 主页作为浏览器主页和新标签页，此次偶然发现 Vivaldi 很好地支持了 Chrome 的各种本地页面，所以把 Chrome 的新标签页拿来配置使用，其中遇到一些问题在这里记录下。\n配置\n首先配置浏览器主页和新标签页为 vivaldi://new-tab-page.\nChrome 的新标签页具有简洁的 Google 搜索框，并可以自定义背景，想到使用 Bing 的每日壁纸，简单抓了一下修改背景时浏览器的写文件操作发现直接把上传的本地图片拷贝到了 C:\\Users\\USERNAME\\AppData\\Local\\Vivaldi\\User Data\\Default\\background.jpg，所以只要写个爬虫每天覆盖该文件就可以实现界面简洁，能自动切换 Bing 壁纸的 Google 搜索新标签页。\n爬取 Bing 壁纸脚本\n123456789101112131415161718192021222324252627import requestsimport jsonimport timeimport urllib.requestdef getBingImg():    try:        headers=&#123;            &#x27;Content-Type&#x27;:&#x27;application/json; charset=utf-8&#x27;,            &#x27;user-agent&#x27;:&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.198 Safari/537.36&#x27;,         &#125; #设置请求头        response = requests.get(            &quot;http://cn.bing.com/HPImageArchive.aspx?format=js&amp;idx=0&amp;n=1&amp;mkt=zh-CN&quot;,            headers=headers,             timeout=3,         ) #请求国内版必应，更新时间为早上八点，早于国际版        response = json.loads(response.text)        url = &#x27;https://cn.bing.com&#x27;+ response[&#x27;images&#x27;][0][&#x27;url&#x27;] #获取当日壁纸地址        return url    except:        return Falseif __name__ == &#x27;__main__&#x27;:    time.sleep(10) #延迟10s,确保网络连接后发送请求    img_url = getBingImg()    dirname = &#x27;C:\\\\Users\\\\KevinSun\\\\AppData\\\\Local\\\\Vivaldi\\\\User Data\\\\Default\\\\background.jpg&#x27; #新标签页背景存储地址    urllib.request.urlretrieve(img_url,dirname) #爬取图片并覆盖\n自动执行爬虫脚本\n接下来的问题就是在每天 Bing 壁纸更新后自动执行脚本，爬取壁纸并覆盖为新标签页的壁纸。这里打算使用 Windows 任务计划来进行实现，配置为：\n\n触发器：每日 8:30 触发一次\n操作：启动程序执行爬虫脚本\n条件：关闭仅在空闲时和使用交流电源时才启动任务\n设置：勾选如果过了计划开始时间，立即启动任务\n\n按照预期，如上配置应该可以实现在每天唤醒或启动电脑后成功更新壁纸，实验过程中遇到一些问题：\n\n执行程序为 python.exe，参数为脚本路径，执行时会弹出 python 交互窗口。\n执行程序改为 pythonw.exe，无 python 交互窗口弹出，但从待机唤醒后执行结果为 0x1，未得到预期结果，查询错误代码 0x1 为使用了未知的函数或脚本，原因不明。\n重新写一个 bat 脚本执行 python '脚本路径'，能够在（短时待机）唤醒后执行脚本，有 CMD 窗口闪过。\n使用 vbs 脚本代替 bat 脚本执行爬虫，无 CMD 窗口闪过，但长时间睡眠唤醒后 vbs 脚本成功执行，未得到预期结果。\n\n附 vbs 脚本：\n123DIM objShellset objShell=wscript.createObject(&quot;wscript.shell&quot;)iReturn=objShell.Run(&quot;cmd.exe /C python C:\\vscode\\Python\\bing.py&quot;, 0, TRUE)\n考虑到可能原因是长时间睡眠唤醒后需要一定时间连接，python 脚本提前执行所以没能成功爬取当日壁纸，在 python 中加入一句 time.sleep(5)，先休眠 5s 再爬取，等待明日测试结果……\nupdate：最后也没成功，直接放弃，改为每小时运行一次，虽说有冗余运行，其实也感知不强。并且顺便发现似乎在零点也会更新一次壁纸，没仔细比对（\n","thumbnail":"https://i.loli.net/2021/06/13/GHJTjotkaqYMpCZ.png","plink":"https://ninecr.tk/vivaldi-edge-chrome.html/"},{"title":"近来所思","date":"2021-05-22T15:21:27.000Z","date_formatted":{"ll":"May 22, 2021","L":"05/22/2021","MM-DD":"05-22"},"updated":"2021-05-23T17:21:41.123Z","content":"","plink":"https://ninecr.tk/what-I-want.html/"},{"title":"Hello World","date":"2021-05-20T10:06:35.000Z","date_formatted":{"ll":"May 20, 2021","L":"05/20/2021","MM-DD":"05-20"},"updated":"2021-06-28T03:01:01.475Z","content":"New Blog\n由于之前的博客 hexo 和主题版本过老，不便升级；设置了众多花里胡哨的功能且没有做配置记录，难以维护；长期咕咕咕不更新 blog，没有价值，故今日重置。\n目前 blog 基于 hexo，主题使用 Inside，灵感来自 Ear7hc。主要风格保持简洁美观。博客内容主要记录学习笔记等技术文章，可能会有随笔、读书笔记等文学类文章。技术类文章的书写规范参考自中文技术文档的写作规范和中文文案排版指北。\nWhat’s past is prologue.\n\nConfiguration Record\n在这里记录对 Blog 所做的各项配置，便于后期维护，持续更新。\n文章自定义 URL\nhexo 默认的文章 URL 为时间 + 标题的格式，不仅不利于 seo，本身也不美观，所以选择自定义：\n\n修改 hexo 配置文件 _config.yml 中的 permalink 为 :urlname.html/，最后的 / 是必要的。\n方便起见，修改 post 模板文件 scaffolds/post.md，在 Front-Matter 中添加 urlname 字段，通过该字段自定义文章的 URL。\n\n代码块复制功能\n参考自【持续更新】Hexo + inside 博客个性化定制，利用 Inside 主题的注入功能，修改主题配置文件 _config.inside.yml：\n123456789101112131415plugins:  # 全局加载 Font Awesome 的 CSS  - //netdna.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css  # 插入依赖 libs  - //cdn.jsdelivr.net/npm/clipboard@2.0.4/dist/clipboard.js  - //cdn.jsdelivr.net/gh/fiteen/fiteen.github.io@v0.1.0/clipboard-use.js  - //cdn.jsdelivr.net/gh/fiteen/fiteen.github.io@v0.1.1/clipboard.css  # inside 主题没有引入 jQuery 框架，需要手动引入  - //cdnjs.loli.net/ajax/libs/jquery/3.2.1/jquery.min.js  # 插件生效范围：post 和 page  - position: [post, page]    template: |      &lt;script type=&quot;text/javascript&quot; src=&quot;//cdn.jsdelivr.net/npm/clipboard@2.0.4/dist/clipboard.js&quot;&gt;&lt;/script&gt;      &lt;script type=&quot;text/javascript&quot; src=&quot;//cdn.jsdelivr.net/gh/fiteen/fiteen.github.io@v0.1.0/clipboard-use.js&quot;&gt;&lt;/script&gt;      &lt;link href=&quot;//cdn.jsdelivr.net/gh/fiteen/fiteen.github.io@v0.1.1/clipboard.css&quot; rel=&quot;stylesheet&quot;&gt;\n复制按钮的样式对深色主题不很友好，缺乏前端知识暂时不便更改，有需要的可自行更改。\n配置头像和站点图标\n主题默认配置了使用 gravatar 获取邮箱对应头像，但无代理时 gravatar 似乎不能正常加载头像，所以将头像和站点图标一并放置到 source 目录下，修改主题配置文件 _config.inside.yml：\n1234567# Sidebar profileprofile:  # You can set Avatar URL directly  avatar: avatar.jpg# ···# Favicon, default to `favicon.ico`favicon: favicon.ico\n自定义 404 页面\nInside 主题自带有 404 页面，但是当从外部直接访问不存在的站点链接时仍然会显示 GitHub Pages 原生的 404 页面，很不美观，查阅资料后发现在根目录下放置有 404.md 或 404.html 时，GitHub Pages 会跳转该 404 页面。鉴于以下原因：\n\nInside 主题的 404 页面是每次重新生成的，不便于把该 html 直接拷贝到根目录。\nhexo 会渲染 source 目录下的 md 文件和 html 文件，且不清楚是否因为和主题的 404 文件冲突，source/404.html 不会被拷贝到 public 目录下。\n\n按如下配置：\n\n\n将 404 页面设置为跳转 Inside 自带的 404 页面，source/404.html（url 中 404 之后的 / 依旧是必要的）：\n123456789&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;title&gt;404&lt;/title&gt; &lt;meta http-equiv=&quot;refresh&quot; content=&quot;0; url=https://ninecr.tk/404/&quot; /&gt;&lt;/head&gt;&lt;body&gt;&lt;/body&gt;&lt;/html&gt;\n\n\n修改 hexo 配置文件 _config.yml：\n12# Directoryskip_render: [README.md, 404.html]\n\n\nenjoy it!\n夜间模式\n\n\n主题配置已经支持\n没有找到好看的配色，后面再改。\n\n\nWaiting for upgrading~\n","plink":"https://ninecr.tk/hello-world.html/"},{"title":"links","date":"2021-05-17T14:10:09.000Z","date_formatted":{"ll":"May 17, 2021","L":"05/17/2021","MM-DD":"05-17"},"updated":"2021-06-13T04:41:14.473Z","content":"随机摆放~\n\n    \n        \n        \n            Zam's Blog\n            这个人很懒，没有介绍\n        \n    \n    \n        \n        \n            知君\n            ly ❤️ xx\n        \n    \n    \n        \n        \n            Zhiyu's Blog\n            JUST DO IT ! ┏ (゜ω゜)= ☞\n        \n    \n    \n        \n        \n            144026\n            一只「蒟蒻」\n        \n    \n        \n        \n        \n            Saying\n            来自网安学院的苣荖\n        \n    \n\n\n\n.friends{display:flex;flex-wrap:wrap;}.friends .brick{-webkit-transition:all .3s ease;transition:all .3s ease;}.friends .brick{display:flex;margin:10px 10px 0 0;text-decoration:none;font-weight:300;padding:10px;background-color:#fff0;border:solid 1px #659eb929;color:#659eb9;text-align:center;border-radius:4px;overflow:hidden}.friends .brick:hover{background-color:#659eb9;color:#fff;border:solid 1px #659eb9;box-shadow:0 6px 16px 0 rgba(80, 178, 243, 0.35);}.blog-avatar:hover{animation:whirl 0.5s;}\n@keyframes whirl{0%{transform:rotate(0deg);}100%{transform:rotate(360deg);}}.friends .brick:active{-webkit-transform:scale(0.95);-moz-transform:scale(0.95);-ms-transform:scale(0.95);-o-transform:scale(0.95);transform:scale(0.95);}.friends .brick .blog-avatar{background-color:#fff0;color:#fff;border:solid 1px #dbdbdb;border-radius:50%;width:50px;height:50px;}.friends .brick .container{margin-left:10px;}.friends .brick .container .name{font-size:16px;}.friends .brick .container .motto{font-family: Microsoft YaHei,PingFang SC;font-size:13px;font-weight:bolder;margin-top:5px;-webkit-box-orient:vertical;-webkit-line-clamp:1;}\n@media(max-width:450px){.friends .brick{width:100%;}.friends .brick .container{margin-left:0;width:100%;}.motto{width: 100% !important;}}.motto.long{width:100px;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;}.mdui-panel-item[open] .mdui-panel-item-arrow{transform:rotate(180deg);}.mdui-panel-item-body {height:auto!important;}\n\n","plink":"https://ninecr.tk/links/"},{"title":"about","date":"2021-05-17T13:54:12.000Z","date_formatted":{"ll":"May 17, 2021","L":"05/17/2021","MM-DD":"05-17"},"updated":"2021-05-17T13:54:12.529Z","content":"","plink":"https://ninecr.tk/about/"}]