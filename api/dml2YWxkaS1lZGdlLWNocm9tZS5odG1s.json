{"title":"在 Vivaldi 中使用 Bing 壁纸的 Chrome 新标签页","date":"2021-06-12T11:00:40.000Z","date_formatted":{"ll":"Jun 12, 2021","L":"06/12/2021","MM-DD":"06-12"},"thumbnail":"https://i.loli.net/2021/06/13/GHJTjotkaqYMpCZ.png","link":"vivaldi-edge-chrome.html","tags":["Windows Task Scheduler","python","spider"],"categories":["Beautify"],"updated":"2021-06-28T02:59:29.283Z","content":"<h2 id=\"背景\">背景<a title=\"#背景\" href=\"#背景\"></a></h2>\n<p>几天前 Vivaldi 更新了 4.0 大版本，之前一段时间影响体验的问题基本已经修复，就重新从 Edge 迁移回来。由于对 Vivaldi 的 Strartpage 不太满意，之前使用时一直将 Google 主页作为浏览器主页和新标签页，此次偶然发现 Vivaldi 很好地支持了 Chrome 的各种本地页面，所以把 Chrome 的新标签页拿来配置使用，其中遇到一些问题在这里记录下。</p>\n<h2 id=\"配置\">配置<a title=\"#配置\" href=\"#配置\"></a></h2>\n<p>首先配置浏览器主页和新标签页为 <code>vivaldi://new-tab-page</code>.</p>\n<p>Chrome 的新标签页具有简洁的 Google 搜索框，并可以自定义背景，想到使用 Bing 的每日壁纸，简单抓了一下修改背景时浏览器的写文件操作发现直接把上传的本地图片拷贝到了 <code>C:\\Users\\USERNAME\\AppData\\Local\\Vivaldi\\User Data\\Default\\background.jpg</code>，所以只要写个爬虫每天覆盖该文件就可以实现界面简洁，能自动切换 Bing 壁纸的 Google 搜索新标签页。</p>\n<h3 id=\"爬取-bing-壁纸脚本\">爬取 Bing 壁纸脚本<a title=\"#爬取-bing-壁纸脚本\" href=\"#爬取-bing-壁纸脚本\"></a></h3>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">import</span> json</span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib.request</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">getBingImg</span>():</span></span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        headers=&#123;</span><br><span class=\"line\">            <span class=\"string\">&#x27;Content-Type&#x27;</span>:<span class=\"string\">&#x27;application/json; charset=utf-8&#x27;</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;user-agent&#x27;</span>:<span class=\"string\">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.198 Safari/537.36&#x27;</span>, </span><br><span class=\"line\">        &#125; <span class=\"comment\">#设置请求头</span></span><br><span class=\"line\">        response = requests.get(</span><br><span class=\"line\">            <span class=\"string\">&quot;http://cn.bing.com/HPImageArchive.aspx?format=js&amp;idx=0&amp;n=1&amp;mkt=zh-CN&quot;</span>,</span><br><span class=\"line\">            headers=headers, </span><br><span class=\"line\">            timeout=<span class=\"number\">3</span>, </span><br><span class=\"line\">        ) <span class=\"comment\">#请求国内版必应，更新时间为早上八点，早于国际版</span></span><br><span class=\"line\">        response = json.loads(response.text)</span><br><span class=\"line\">        url = <span class=\"string\">&#x27;https://cn.bing.com&#x27;</span>+ response[<span class=\"string\">&#x27;images&#x27;</span>][<span class=\"number\">0</span>][<span class=\"string\">&#x27;url&#x27;</span>] <span class=\"comment\">#获取当日壁纸地址</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> url</span><br><span class=\"line\">    <span class=\"keyword\">except</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    time.sleep(<span class=\"number\">10</span>) <span class=\"comment\">#延迟10s,确保网络连接后发送请求</span></span><br><span class=\"line\">    img_url = getBingImg()</span><br><span class=\"line\">    dirname = <span class=\"string\">&#x27;C:\\\\Users\\\\KevinSun\\\\AppData\\\\Local\\\\Vivaldi\\\\User Data\\\\Default\\\\background.jpg&#x27;</span> <span class=\"comment\">#新标签页背景存储地址</span></span><br><span class=\"line\">    urllib.request.urlretrieve(img_url,dirname) <span class=\"comment\">#爬取图片并覆盖</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"自动执行爬虫脚本\">自动执行爬虫脚本<a title=\"#自动执行爬虫脚本\" href=\"#自动执行爬虫脚本\"></a></h3>\n<p>接下来的问题就是在每天 Bing 壁纸更新后自动执行脚本，爬取壁纸并覆盖为新标签页的壁纸。这里打算使用 Windows 任务计划来进行实现，配置为：</p>\n<ul>\n<li>触发器：每日 8:30 触发一次</li>\n<li>操作：启动程序执行爬虫脚本</li>\n<li>条件：关闭仅在空闲时和使用交流电源时才启动任务</li>\n<li>设置：勾选如果过了计划开始时间，立即启动任务</li>\n</ul>\n<p>按照预期，如上配置应该可以实现在每天唤醒或启动电脑后成功更新壁纸，实验过程中遇到一些问题：</p>\n<ol>\n<li>执行程序为 python.exe，参数为脚本路径，执行时会弹出 python 交互窗口。</li>\n<li>执行程序改为 pythonw.exe，无 python 交互窗口弹出，但从待机唤醒后执行结果为 0x1，未得到预期结果，查询错误代码 0x1 为使用了未知的函数或脚本，原因不明。</li>\n<li>重新写一个 bat 脚本执行 <code>python '脚本路径'</code>，能够在（短时待机）唤醒后执行脚本，有 CMD 窗口闪过。</li>\n<li>使用 vbs 脚本代替 bat 脚本执行爬虫，无 CMD 窗口闪过，但长时间睡眠唤醒后 vbs 脚本成功执行，未得到预期结果。</li>\n</ol>\n<p>附 vbs 脚本：</p>\n<figure class=\"highlight vbscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">DIM</span> objShell</span><br><span class=\"line\"><span class=\"keyword\">set</span> objShell=wscript.<span class=\"built_in\">createObject</span>(<span class=\"string\">&quot;wscript.shell&quot;</span>)</span><br><span class=\"line\">iReturn=objShell.Run(<span class=\"string\">&quot;cmd.exe /C python C:\\vscode\\Python\\bing.py&quot;</span>, <span class=\"number\">0</span>, <span class=\"literal\">TRUE</span>)</span><br></pre></td></tr></table></figure>\n<p>考虑到可能原因是长时间睡眠唤醒后需要一定时间连接，python 脚本提前执行所以没能成功爬取当日壁纸，在 python 中加入一句 <code>time.sleep(5)</code>，先休眠 5s 再爬取，等待明日测试结果……</p>\n<p>update：最后也没成功，直接放弃，改为每小时运行一次，虽说有冗余运行，其实也感知不强。并且顺便发现似乎在零点也会更新一次壁纸，没仔细比对（</p>\n","prev":{"title":"VScode 配置 Java 开发环境","link":"Java-in-VScode.html"},"next":{"title":"近来所思","link":"what-I-want.html"},"plink":"https://ninecr.tk/vivaldi-edge-chrome.html/","toc":[{"id":"背景","title":"背景","index":"1"},{"id":"配置","title":"配置","index":"2","children":[{"id":"爬取-bing-壁纸脚本","title":"爬取 Bing 壁纸脚本","index":"2.1"},{"id":"自动执行爬虫脚本","title":"自动执行爬虫脚本","index":"2.2"}]}],"copyright":{"link":"<a href=\"https://ninecr.tk/vivaldi-edge-chrome.html/\" title=\"在 Vivaldi 中使用 Bing 壁纸的 Chrome 新标签页\">https://ninecr.tk/vivaldi-edge-chrome.html/</a>","license":"Attribution-NonCommercial-ShareAlike 4.0 (<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" rel=\\\"external nofollow\\\" target=\\\"_blank\\\">CC BY-NC-SA 4.0</a>)"}}